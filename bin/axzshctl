#!/bin/zsh
#
# AX-ZSH: Alex' Modular ZSH Configuration
# Copyright (c) 2015 Alexander Barton <alex@barton.de>
#

# Include "ax-common.sh", if available:
for dir ("$HOME/lib" "$HOME/.ax" /usr/local /opt/ax /usr); do
	[[ -z "$ax_common_sourced" ]] || break
	ax_common="${dir}/lib/ax/ax-common.sh"
	[[ -r "$ax_common" ]] && source "$ax_common"
done
if [[ -z "$ax_common_sourced" ]]; then
	function ax_msg {
		case "$1" in
		  "1"|"2") echo -n "! "; ;;
		  *) echo -n "* "; ;;
		esac
		shift
		echo "$@"
	}
fi
unset dir ax_common ax_common_sourced

function Usage {
	echo "$NAME <command> [...]"
	echo
	echo "  enable-plugin <p> [<p> [...]]"
	echo "    Enable plugin(s)."
	echo
	echo "  disable-plugin <p> [<p> [...]]"
	echo "    Disable plugin(s)."
	echo
	echo "  reset-plugins"
	echo "    Reset active plugins to the default list."
	echo
	exit 2
}

function EnablePlugin {
	local dir="$AXZSH/active_plugins"

	if [[ -h "$dir/$1" ]]; then
		ax_msg 1 "Plugin \"$1\" already active!"
		return 1
	fi

	for dname (
		"$AXZSH_PLUGIN_D/$plugin:A"
		"$ZSH_CUSTOM/$plugin:A"
		"$AXZSH/plugins/$plugin:A"
		"$AXZSH/default_plugins/$plugin:A"
		"$AXZSH/core/$plugin:A"
	); do
		[[ ! -d "$dname" ]] && continue
		mkdir -p "$dir"
		(
			cd "$dir" || exit 9
			ln -sv "$dname" "$PWD"
		)
		return $?
	done

	ax_msg 2 "Plugin \"$1\" not found!"
	return 1
}

function DisablePlugin {
	local dir="$AXZSH/active_plugins"

	if [[ ! -h "$dir/$1" ]]; then
		ax_msg 1 "Plugin \"$1\" not active?"
		return 1
	fi

	rm -v "$dir/$1"
	return $?
}

function ResetPlugins {
	local dir="$AXZSH/active_plugins"

	if [[ -e "$dir" ]]; then
		ax_msg - "Removing all symbolic links in $dir ..."
		find "$dir" -type l -print -delete
	fi

	ax_msg - "Activating (linking) default plugins ..."
	mkdir -p "$dir"
	(
		cd "$dir" || exit 9
		ln -sv "$AXZSH/default_plugins/"* "$PWD"
	)
	return $?
}

NAME="$(basename "$0")"

[[ $# -gt 0 ]] || Usage

if [[ -z "$AXZSH" || ! -d "$AXZSH" ]]; then
	ax_msg 2 "Oops, \"AXZSH\" is not set or invalid!"
	exit 3
fi

cmd="$1"
shift

case "$cmd" in
	"enable-plugin")
		[[ $# -gt 0 ]] || Usage
		for plugin in "$@"; do
			EnablePlugin "$plugin"
		done
		;;
	"disable-plugin")
		[[ $# -gt 0 ]] || Usage
		for plugin in "$@"; do
			DisablePlugin "$plugin"
		done
		;;
	"reset-plugins")
		[[ $# -eq 0 ]] || Usage
		ResetPlugins
		;;
	*)
		Usage
esac
